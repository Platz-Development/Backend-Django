# Generated by Django 5.1.6 on 2025-04-09 13:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('live_class_streaming', '0005_rename_fallback_triggered_liveclasssession_is_fallback_triggered_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='sessionrecording',
            options={'verbose_name': 'Session Recording', 'verbose_name_plural': 'Session Recordings'},
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='download_attempts',
            field=models.PositiveSmallIntegerField(default=0, help_text='Number of download retries'),
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='egress_id',
            field=models.CharField(blank=True, help_text="LiveKit's egress job ID", max_length=64),
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='livekit_mp4_url',
            field=models.URLField(blank=True, help_text='Temporary LiveKit MP4 URL (expires in 24h)'),
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='local_video_file',
            field=models.FileField(blank=True, help_text='Locally stored recording', null=True, upload_to='recordings/'),
        ),
        migrations.AddField(
            model_name='sessionrecording',
            name='status',
            field=models.CharField(choices=[('REQUESTED', 'Recording Requested'), ('STARTED', 'Recording Started'), ('DOWNLOADING', 'Downloading from LiveKit'), ('COMPLETED', 'Successfully Stored'), ('FAILED', 'Recording Failed')], default='REQUESTED', max_length=12),
        ),
        migrations.AlterField(
            model_name='sessionrecording',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recording', to='live_class_streaming.liveclasssession'),
        ),
    ]

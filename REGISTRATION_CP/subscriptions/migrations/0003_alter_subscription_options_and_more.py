# Generated by Django 5.2.3 on 2025-06-22 12:32

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('subscriptions', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='subscription',
            options={'ordering': ['tier__tier_level']},
        ),
        migrations.AddField(
            model_name='historicalsubscription',
            name='cancellation_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalsubscription',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('trialing', 'Trialing'), ('past_due', 'Past Due')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='subscription',
            name='cancellation_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subscription',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('trialing', 'Trialing'), ('past_due', 'Past Due')], default='active', max_length=20),
        ),
        migrations.CreateModel(
            name='HistoricalSubscriptionTier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(choices=[(1, 'Platz Basic'), (2, 'Platz Plus'), (3, 'Platz Pro'), (4, 'Platz Advanced'), (5, 'Platz Elite')], max_length=50)),
                ('stripe_price_id', models.CharField(help_text='Stripe Price ID for this tier', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tier_level', models.IntegerField(choices=[(1, 'Platz Basic'), (2, 'Platz Plus'), (3, 'Platz Pro'), (4, 'Platz Advanced'), (5, 'Platz Elite')], db_index=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='subscriptions.service')),
            ],
            options={
                'verbose_name': 'historical subscription tier',
                'verbose_name_plural': 'historical subscription tiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SubscriptionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(1, 'Platz Basic'), (2, 'Platz Plus'), (3, 'Platz Pro'), (4, 'Platz Advanced'), (5, 'Platz Elite')], max_length=50)),
                ('stripe_price_id', models.CharField(help_text='Stripe Price ID for this tier', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tier_level', models.IntegerField(choices=[(1, 'Platz Basic'), (2, 'Platz Plus'), (3, 'Platz Pro'), (4, 'Platz Advanced'), (5, 'Platz Elite')], unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiers', to='subscriptions.service')),
            ],
            options={
                'ordering': ['tier_level'],
            },
        ),
        migrations.AddField(
            model_name='historicalsubscription',
            name='tier',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='subscriptions.subscriptiontier'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='tier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='subscriptions.subscriptiontier'),
        ),
        migrations.AlterUniqueTogether(
            name='subscription',
            unique_together={('role', 'service', 'tier')},
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user'], name='subscriptio_user_id_586440_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['service'], name='subscriptio_service_f1b475_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['tier'], name='subscriptio_tier_id_9ccc26_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subscriptiontier',
            unique_together={('service', 'tier_level')},
        ),
    ]
